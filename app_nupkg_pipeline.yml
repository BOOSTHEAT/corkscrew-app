name: $(Year:yyyy).$(Month).$(DayOfMonth).$(Rev:r)
trigger:
  branches:
    include:
      - master

resources:
  pipelines:
    - pipeline: LANG
      project: ImpliciX
      source: language
      trigger: true

stages:
  - stage: regularBuild
    jobs:
      - job: regularBuild
        pool:
          vmImage: 'ubuntu-latest'
        
        variables:
          buildConfiguration: 'Release'
          appProj: './Corkscrew.App/Corkscrew.App.csproj'
        
        steps:
          - task: UseDotNet@2
            displayName: 'Install .net 8.0'
            inputs:
              packageType: sdk
              version: '8.0.x'
              installationPath: $(Agent.ToolsDirectory)/dotnet

          - task: NuGetAuthenticate@0

          - task: DotNetCoreCLI@2
            displayName: Restore
            inputs:
              command: restore
              projects: $(appProj)
              feedsToUse: 'config'
              nugetConfigPath : "./NuGet.Config"

          - task: DotNetCoreCLI@2
            displayName: Build
            inputs:
              command: build
              projects: $(appProj)
              arguments: -c $(buildConfiguration) /p:Version=$(Build.BuildNumber)

          - task: UseDotNet@2
            displayName: 'Install .net core 2.1'
            inputs:
              packageType: sdk
              version: '2.1.818'
              installationPath: $(Agent.ToolsDirectory)/dotnet
        
          - bash: |
              set -x
              languageDLL=$(echo ~/.nuget/packages/implicix.language/*/lib/netstandard2.1/*.dll)
              dotnet new tool-manifest
              dotnet tool install --local aver
              languageVersion=$(dotnet tool run aver -- -A -a $languageDLL | grep FileVersion | cut -c 14-)
              az pipelines build tag add --build-id ${BUILD_BUILDID} --tags "Language=$languageVersion"
            displayName: Tag build with language version
            env:
              AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)

          - task: DotNetCoreCLI@2
            inputs:
              command: custom
              custom: pack
              arguments: $(appProj) -c $(buildConfiguration) -o $(Build.ArtifactStagingDirectory) -p:PackageVersion=$(Build.BuildNumber) /p:Version=$(Build.BuildNumber) --no-build -p:PackageId=ImpliciX.Corkscrew
            displayName: Create nupkg

          - task: NuGetCommand@2
            inputs:
              command: push
              feedsToUse: select
              packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
              nuGetFeedType: internal
              publishVstsFeed: 'ImpliciX'
            displayName: Publish to artifacts feed

          - task: PublishBuildArtifacts@1
            inputs:
              pathtoPublish: '$(Build.ArtifactStagingDirectory)'
              artifactName: "ImpliciX.Corkscrew"
            displayName: Publish artifacts
